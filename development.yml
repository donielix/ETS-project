version: "3.9"

services:
  db:
    image: postgres
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "2345:5432"

  backend: # initializes python server
    image: backend
    build: .
    command: bash -c "python manage.py makemigrations &&
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      rabbit:
        condition: service_healthy

  # RabbitMQ broker
  rabbit:
    image: rabbitmq:3-management
    hostname: rabbit-host
    env_file:
      - .env
    ports:
      - "5672:5672"
      - "15672:15672" # here, we can access rabbitmq management plugin
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  celery-worker: # python worker instance
    image: backend
    command: celery -A root worker --loglevel=INFO --concurrency=10
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      rabbit:
        condition: service_healthy
    volumes:
      - .:/code
